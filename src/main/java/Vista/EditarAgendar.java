/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.Controladorasistente;
import Modelo.Horario;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpPut;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

/**
 *Esta es la vista de editar hora
 * @author mauri
 */
public class EditarAgendar extends javax.swing.JFrame {
    
    String valorid;
      String horario = null;
        String vet = null;
        String fecha = null;
        String suc = null;
        String cli = null;
        String nom = null;
        String id_h = null;
        String cor = null;
        String motivo = null;
        String tel = null;
        String rut = null;
    /** * Esta es la vista de Agendar hora disp.
 * Crea una nueva instancia de la clase AgendarHorarioDisp.
 * @param valor1 Descripción del parámetro valor1.
 * @author mauri
     */
    
    public EditarAgendar(String valor1) {
          Controladorasistente cm = new Controladorasistente();
        String url = "https://davydvat.pythonanywhere.com/atencion/"+ valor1+"/";
       valorid = valor1;
        String token = "4432703a71447984770c315364a7848f7d69bcc9";
        Horario hora = null;
        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
            HttpGet httpGet = new HttpGet(url);

            // Agregar el encabezado de autenticación con el token
            httpGet.setHeader("Authorization", "Token " + token);

            // Enviar la solicitud y obtener la respuesta
            try (CloseableHttpResponse response = httpClient.execute(httpGet)) {
                HttpEntity entity = response.getEntity();
                if (entity != null) {
                    String responseBody = EntityUtils.toString(entity);
                    
          

                    // Parsear el JSON utilizando Gson
                    Gson gson = new Gson();
                    
                    
                    // Imprimir las variables
                    hora = gson.fromJson(responseBody, Horario.class);
                    
                }
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
        initComponents();
        
        horario = hora.getHora();
        vet = hora.getRut_vet();
        fecha = hora.getFecha();
        suc = hora.getSucursal();
        cli = hora.getRut_cli();
        nom = hora.getNombre_cli();
        id_h = hora.getId_hora();
        cor = hora.getCorreo_cli();
        motivo = hora.getEstado();
        tel = hora.getTelefono_cli();
        rut = hora.getRut_cli();
    }

    private EditarAgendar() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblListado = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        btnRservar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Editar");
        jLabel1.setToolTipText("");
        jLabel1.setAutoscrolls(true);

        tblListado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Fecha", "Hora", "Disponibilidad", "Rut Cli", "Nombre Cli", "Correo Cli", "Telefono Cli", "Nombre Veterinario", "Reservar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblListado);

        btnBuscar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("ID de Nueva Reserva:");

        txtID.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIDKeyTyped(evt);
            }
        });

        btnRservar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnRservar.setText("Reservar");
        btnRservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRservarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(309, 309, 309)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(btnBuscar)
                                .addGap(41, 41, 41)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(btnRservar)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(303, 303, 303)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(jLabel2)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRservar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
           String url = "https://davydvat.pythonanywhere.com/atencion";
        String token = "4432703a71447984770c315364a7848f7d69bcc9";
        DefaultTableModel modelo = (DefaultTableModel) tblListado.getModel();
        modelo.setRowCount(0);
       
        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
        
            HttpGet httpGet = new HttpGet(url);

             httpGet.addHeader("Authorization", "Token " + token);
            HttpResponse response = httpClient.execute(httpGet);
            HttpEntity entity = response.getEntity();
                String responseBody = EntityUtils.toString(entity);
                Gson gson = new Gson();
                java.lang.reflect.Type listType = new TypeToken<List<Horario>>() {}.getType();
                List<Horario> listaHorarios = gson.fromJson(responseBody, listType);
                 for (Horario inscripcion : listaHorarios) {
                Controladorasistente cm = new Controladorasistente();
                if("Disponible".equals(inscripcion.getEstado())){
                String valor = cm.valor_rut(inscripcion.getRut_vet());
                String valor_sucursal = cm.valor_sucursal(inscripcion.getSucursal());
                modelo.addRow(new Object[]{inscripcion.getId_hora(), inscripcion.getFecha(),inscripcion.getHora(), inscripcion.getEstado(),inscripcion.getRut_cli(),inscripcion.getNombre_cli(),inscripcion.getCorreo_cli(),inscripcion.getTelefono_cli(),valor, valor_sucursal});

                }
                }} catch (IOException ex) {
            Logger.getLogger(EditarAgendar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       menu frm = new  menu();
       frm.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnRservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRservarActionPerformed
        // TODO add your handling code here:
        
        String nuevo_id = txtID.getText();
        if(nuevo_id.trim().length() != 0){
          String url3 = "https://davydvat.pythonanywhere.com/atencion/"+ nuevo_id+"/";
   
        String token = "4432703a71447984770c315364a7848f7d69bcc9";
        Horario hora = null;
        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
            HttpGet httpGet = new HttpGet(url3);
           httpGet.setHeader("Authorization", "Token " + token);
           try (CloseableHttpResponse response = httpClient.execute(httpGet)) {
                HttpEntity entity = response.getEntity();
                if (entity != null) {
                    String responseBody = EntityUtils.toString(entity);
                   Gson gson = new Gson();
                  hora = gson.fromJson(responseBody, Horario.class);
                    
                }
            }

        } catch (IOException e) {
            e.printStackTrace();
        }    
      
        String fechaOriginal = fecha;
          
        String url = "https://davydvat.pythonanywhere.com/atencion/" + valorid+"/";
      
        SimpleDateFormat formatoSalida = new SimpleDateFormat("yyyy-MM-dd");
     SimpleDateFormat formatoEntrada = new SimpleDateFormat("dd-MM-yy");
        String fechaInvertida = null;
        try {
            
            Date fecha = formatoEntrada.parse(fechaOriginal);
           fechaInvertida = formatoSalida.format(fecha);
       } catch (Exception e) {
            e.printStackTrace();
        }
        Controladorasistente cm = new Controladorasistente();
        String nom_vet = cm.Nombre_vet(vet);
        String nom_suc = cm.Nombre_suc(suc);
          String fechaInvertida2 = null;
        try {
          Date fecha2 = formatoEntrada.parse(hora.getFecha());
            
           fechaInvertida2 = formatoSalida.format(fecha2);            
        } catch (Exception e) {
            e.printStackTrace();
        }
         String jsonBody3 = "{"
            + "\"fecha\":\"" + fechaInvertida2 +"\","
            + "\"hora\":\""+ hora.getHora() +"\","
            + "\"estado\":\"Ocupado\","
            + "\"rut_cli\":\""+ rut+"\","
            + "\"nombre_cli\":\""+cli +"\","
            + "\"telefono_cli\":\""+tel+"\","
            + "\"correo_cli\":\""+cor+"\","
            + "\"motivo\":\""+motivo +"\","
            + "\"rut_vet\":\""+ hora.getRut_vet()+"\","
            + "\"sucursal\":\""+ hora.getSucursal() +"\""
            + "}";
        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
       
            HttpPut httpPut = new HttpPut(url3);
            httpPut.setHeader("Content-Type", "application/json; charset=UTF-8");

            httpPut.setHeader("Authorization", "Token " + token);

            StringEntity requestEntity = new StringEntity(jsonBody3,"UTF-8");
            httpPut.setEntity(requestEntity);
           HttpResponse response = httpClient.execute(httpPut);

            // Procesar la respuesta
         
        } catch (Exception e) {
            e.printStackTrace();
        }
        String url2 = "https://davydvat.pythonanywhere.com/correo/cambiar_hora/"; 
        String jsonBody2 = "{"
            + "\"nombre\":\"" + nom  +"\","
            + "\"fecha_antigua\":\""+ fecha +"\","
            + "\"hora_antigua\":\""+ horario+"\","
                + "\"fecha_nueva\":\""+ fechaInvertida2+"\","
                + "\"hora_nueva\":\""+ hora.getHora()+"\","
            + "\"veterinario\":\""+ nom_vet +"\","
            + "\"sucursal\":\""+ nom_suc +"\","
            + "\"telefono\":\""+ tel +"\","
            + "\"correo\":\""+ cor +"\""
            + "}";

        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
       
            HttpPost httpPost = new HttpPost(url2);
            httpPost.setHeader("Content-Type", "application/json");

        
            httpPost.setHeader("Authorization", "Token " + token);

            StringEntity requestEntity = new StringEntity(jsonBody2);
            httpPost.setEntity(requestEntity);
            HttpResponse response = httpClient.execute(httpPost);
            HttpEntity responseEntity = response.getEntity();

            // Procesar la respuesta
           
        } catch (Exception e) {
            e.printStackTrace();
        }
     
        String jsonBody = "{"
            + "\"fecha\":\"" + fechaInvertida +"\","
            + "\"hora\":\""+ horario +"\","
            + "\"estado\":\"Disponible\","
            + "\"rut_cli\":\""+"\","
            + "\"nombre_cli\":\"" +"\","
            + "\"telefono_cli\":\""+"\","
            + "\"correo_cli\":\""+"\","
            + "\"motivo\":\""+"\","
            + "\"rut_vet\":\""+ vet+"\","
            + "\"sucursal\":\""+ suc +"\""
            + "}";
       
        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
            HttpPut httpPut = new HttpPut(url);
            httpPut.setHeader("Content-Type", "application/json; charset=UTF-8");
            httpPut.setHeader("Authorization", "Token " + token);

            StringEntity requestEntity = new StringEntity(jsonBody,"UTF-8");
            httpPut.setEntity(requestEntity);
            HttpResponse response = httpClient.execute(httpPut);
            HttpEntity responseEntity = response.getEntity();
            JOptionPane.showMessageDialog(this, "Hora Cambiada");
        } catch (Exception e) {
            e.printStackTrace();
        } 
        }else{
            JOptionPane.showMessageDialog(this, "Ingrese Id de Cambio");
        }
    }//GEN-LAST:event_btnRservarActionPerformed

    private void txtIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();
        boolean numero = (key >= 48 && key <= 57);
        if(!numero){
            evt.consume();
            
        }
         
    }//GEN-LAST:event_txtIDKeyTyped

 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnRservar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblListado;
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables
}
