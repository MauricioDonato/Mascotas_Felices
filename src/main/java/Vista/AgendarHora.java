/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.Controladorasistente;
import Modelo.Horario;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPut;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

/**
 *Esta es la vista de Agendar hora
 * @author mauri
 */
public class AgendarHora extends javax.swing.JFrame {

    /**
     * Creates new form AgendarHora
     */
    public AgendarHora() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblListado = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblListado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Fecha", "Hora", "Disponibilidad", "Rut Cli", "Nombre Cli", "Correo Cli", "Telefono Cli", "Nombre Veterinario", "Reservar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblListado);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Disponibilidad");

        btnBuscar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Reservar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("ID Reserva:");

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeyTyped(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(331, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(361, 361, 361))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addGap(42, 42, 42))
            .addGroup(layout.createSequentialGroup()
                .addGap(380, 380, 380)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(jButton1))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        String url = "https://davydvat.pythonanywhere.com/atencion";
        String token = "4432703a71447984770c315364a7848f7d69bcc9";
        DefaultTableModel modelo = (DefaultTableModel) tblListado.getModel();
        modelo.setRowCount(0);
       
        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
            // Crea una solicitud GET
            HttpGet httpGet = new HttpGet(url);

            // Agrega el token de autenticación en el encabezado
             httpGet.addHeader("Authorization", "Token " + token);

            // Ejecuta la solicitud GET y obtén la respuesta
            HttpResponse response = httpClient.execute(httpGet);
            HttpEntity entity = response.getEntity();

            // Procesa la respuesta
            
                String responseBody = EntityUtils.toString(entity);

                // Utiliza Gson para analizar la respuesta JSON en una lista de objetos
                Gson gson = new Gson();
                java.lang.reflect.Type listType = new TypeToken<List<Horario>>() {}.getType();
                List<Horario> listaHorarios = gson.fromJson(responseBody, listType);

                // Ahora tienes la lista de objetos en 'tuObjetos' para trabajar con ellos
                
                 for (Horario inscripcion : listaHorarios) {
                Controladorasistente cm = new Controladorasistente();
                if("Disponible".equals(inscripcion.getEstado())){
                String valor = cm.valor_rut(inscripcion.getRut_vet());
               
                String valor_sucursal = cm.valor_sucursal(inscripcion.getSucursal());
                modelo.addRow(new Object[]{inscripcion.getId_hora(), inscripcion.getFecha(),inscripcion.getHora(), inscripcion.getEstado(),inscripcion.getRut_cli(),inscripcion.getNombre_cli(),inscripcion.getCorreo_cli(),inscripcion.getTelefono_cli(),valor, valor_sucursal});
               
          
                }
                }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if("".equals(txtId.getText())){
            JOptionPane.showMessageDialog(this, "Ingrese un ID");
            return  ;
        }
        Controladorasistente cm = new Controladorasistente();
        String url = "https://davydvat.pythonanywhere.com/atencion/"+ txtId.getText();
        
        String token = "4432703a71447984770c315364a7848f7d69bcc9";
        Horario hora = null;
        try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
            HttpGet httpGet = new HttpGet(url);

            // Agregar el encabezado de autenticación con el token
            httpGet.setHeader("Authorization", "Token " + token);

            // Enviar la solicitud y obtener la respuesta
            try (CloseableHttpResponse response = httpClient.execute(httpGet)) {
                HttpEntity entity = response.getEntity();
                if (entity != null) {
                    String responseBody = EntityUtils.toString(entity);
                   Gson gson = new Gson();
                    hora = gson.fromJson(responseBody, Horario.class);
                    
                }
            }

        } catch (IOException e) {
            e.printStackTrace();
        }  String fechaOriginal = hora.getFecha();
        
        // Definir el formato de entrada (año/mes/día)
        SimpleDateFormat formatoSalida = new SimpleDateFormat("yyyy-MM-dd");
        
        // Definir el formato de salida (día/mes/año)
        SimpleDateFormat formatoEntrada = new SimpleDateFormat("dd-MM-yy");
        String fechaInvertida = null;
        try {
            // Parsear la fecha original al formato de fecha
            Date fecha = formatoEntrada.parse(fechaOriginal);
            
            // Formatear la fecha en el nuevo formato
            fechaInvertida = formatoSalida.format(fecha);
            
            // Imprimir la fecha invertida
        
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        String rut = "https://davydvat.pythonanywhere.com/veterinario/13956115-5/";
        String url2 = "https://davydvat.pythonanywhere.com/atencion/"+ txtId.getText()+"/";
         String jsonBody = "{"
            + "\"fecha\":\"" + fechaInvertida +"\","
            + "\"hora\":\""+ hora.getHora() +"\","
            + "\"estado\":\"Pendiente\","
            + "\"rut_cli\":\"\","
            + "\"nombre_cli\":\"\","
            + "\"telefono_cli\":\"\","
            + "\"correo_cli\":\"\","
            + "\"motivo\":\"\","
            + "\"rut_vet\":\""+ rut +"\","
            + "\"sucursal\":\"" + hora.getSucursal() + "\""
            + "}";
     try (CloseableHttpClient httpClient = HttpClients.createDefault()) {
            // Crear una solicitud PUT
            HttpPut httpPut = new HttpPut(url2);
            httpPut.setHeader("Content-Type", "application/json");

            // Agregar el token de autenticación en el encabezado
            httpPut.setHeader("Authorization", "Token " + token);

            // Configurar el cuerpo de la solicitud con los datos
            StringEntity requestEntity = new StringEntity(jsonBody);
            httpPut.setEntity(requestEntity);

            // Ejecutar la solicitud PUT y obtener la respuesta
            HttpResponse response = httpClient.execute(httpPut);
            HttpEntity responseEntity = response.getEntity();

            // Procesar la respuesta
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        String valor = txtId.getText();
       AgendarHorarioDisp frm = new  AgendarHorarioDisp(valor);
       frm.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       menu frm = new  menu();
       frm.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();
        boolean numero = (key >= 48 && key <= 57);
        if(!numero){
            evt.consume();
            
        }
    }//GEN-LAST:event_txtIdKeyTyped

  

    // Botón para buscar disponibilidad
    // Botón para realizar la reserva
   // Botón para volver al menú principal
    // Etiqueta para indicar la sección de disponibilidad
    // Etiqueta para indicar el ID de reserva
    // Área de desplazamiento para la tabla de horarios
    // Tabla que muestra la disponibilidad de horarios
    // Campo de texto para ingresar el ID de reserva
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblListado;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
